/* perfect number 완전수
자기자신을 제외한 약수의 합 = 자기자신
6=1+2+3
28=1+2+4+7+14
2~10000까지 완전수는 4개가 있다. */

//완전수 (Perfect number) 구하기

// 자기 자신을 제외한 약수의 합 구하는 함수
function sumOfDivisors(num) {
    let sum = 0;
    for (let i = 1; i<num; i++){
        if (num % i == 0)
            sum += i;
    }
    return sum;
    
}

//2에서 부터 10000사이의 완전수 구하기
for (let i =2; i <=10000; i++) {
    if (i == sumOfDivisors(i))
        console.log(i);
}
/* 
6
28
496
8128 */

/* 이 코드는 sumOfDivisors라는 함수를 정의합니다. 이 함수는 숫자를 입력으로 받아들여, 입력된 숫자의 약수들의 합을 계산하여 반환합니다.

그 다음으로, for 반복문을 사용하여 2부터 10000까지의 모든 숫자를 확인합니다. 각 숫자마다 sumOfDivisors 함수를 호출하여 해당 숫자의 약수들의 합을 계산합니다. 만약 약수들의 합이 원래의 숫자와 같다면, 해당 숫자는 "완전수"로 간주되고 콘솔에 출력됩니다.

따라서 이 코드는 2부터 10000까지의 모든 완전수를 찾는 코드입니다 */